# Generated by Django 4.2.23 on 2025-08-20 08:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("onboarding", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ticket_type",
                    models.CharField(
                        choices=[
                            ("incident", "Incident"),
                            ("problem", "Problem"),
                            ("change", "Change Request"),
                        ],
                        default="incident",
                        help_text="Type of ticket: Incident, Problem, or Change Request",
                        max_length=20,
                        verbose_name="Ticket Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Brief description of the issue or request",
                        max_length=200,
                        verbose_name="Summary",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the issue, problem, or change request",
                        verbose_name="Description",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Critical - Service Down"),
                            (2, "High - Major Impact"),
                            (3, "Medium - Minor Impact"),
                            (4, "Low - Minimal Impact"),
                        ],
                        default=3,
                        help_text="Business priority based on urgency and impact",
                        verbose_name="Priority",
                    ),
                ),
                (
                    "impact",
                    models.IntegerField(
                        choices=[
                            (1, "High - Multiple Users/Systems"),
                            (2, "Medium - Single User/System"),
                            (3, "Low - Minor Functionality"),
                        ],
                        default=2,
                        help_text="Impact level of the issue",
                        verbose_name="Impact",
                    ),
                ),
                (
                    "urgency",
                    models.IntegerField(
                        choices=[
                            (1, "Critical - Service Down"),
                            (2, "High - Major Impact"),
                            (3, "Medium - Minor Impact"),
                            (4, "Low - Minimal Impact"),
                        ],
                        default=3,
                        help_text="How quickly this needs to be resolved",
                        verbose_name="Urgency",
                    ),
                ),
                (
                    "reporter_name",
                    models.CharField(
                        help_text="Name of the person reporting the issue",
                        max_length=200,
                        verbose_name="Reporter Name",
                    ),
                ),
                (
                    "reporter_email",
                    models.EmailField(
                        help_text="Email address of the reporter",
                        max_length=254,
                        verbose_name="Reporter Email",
                    ),
                ),
                (
                    "reporter_phone",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number for the reporter",
                        max_length=20,
                        verbose_name="Reporter Phone",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date this ticket was created",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date this ticket was last modified",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "resolved_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date this ticket was resolved",
                        null=True,
                        verbose_name="Resolved Date",
                    ),
                ),
                (
                    "closed_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date this ticket was closed",
                        null=True,
                        verbose_name="Closed Date",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "New"),
                            (2, "In Progress"),
                            (3, "Waiting for Information"),
                            (4, "Resolved"),
                            (5, "Closed"),
                            (6, "Cancelled"),
                        ],
                        default=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "affected_service",
                    models.CharField(
                        blank=True,
                        help_text="Service or system affected by this issue",
                        max_length=200,
                        verbose_name="Affected Service",
                    ),
                ),
                (
                    "resolution",
                    models.TextField(
                        blank=True,
                        help_text="Description of how this ticket was resolved",
                        verbose_name="Resolution",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Team member responsible for resolving this ticket",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigned To",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Service category or department affected",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="onboarding.department",
                        verbose_name="Category",
                    ),
                ),
                (
                    "parent_problem",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent problem ticket (for incidents)",
                        limit_choices_to={"ticket_type": "problem"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_incidents",
                        to="onboarding.ticket",
                    ),
                ),
                (
                    "related_incidents",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Related incident tickets",
                        limit_choices_to={"ticket_type": "incident"},
                        related_name="related_to",
                        to="onboarding.ticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="TicketUpdate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Brief title for this update",
                        max_length=200,
                        verbose_name="Title",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Detailed progress update or notes",
                        verbose_name="Comment",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this update is visible to the hiring manager",
                        verbose_name="Visible to Hiring Manager",
                    ),
                ),
                (
                    "new_status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "New"),
                            (2, "In Progress"),
                            (3, "Waiting for Information"),
                            (4, "Resolved"),
                            (5, "Closed"),
                            (6, "Cancelled"),
                        ],
                        help_text="If status was changed, what was it changed to?",
                        null=True,
                        verbose_name="New Status",
                    ),
                ),
                (
                    "time_spent",
                    models.DurationField(
                        blank=True,
                        help_text="Time spent on this update",
                        null=True,
                        verbose_name="Time Spent",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="onboarding.ticket",
                        verbose_name="Ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who made this update",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Progress Update",
                "verbose_name_plural": "Progress Updates",
                "ordering": ["date"],
            },
        ),
        migrations.RemoveField(
            model_name="progressupdate",
            name="request",
        ),
        migrations.RemoveField(
            model_name="progressupdate",
            name="user",
        ),
        migrations.DeleteModel(
            name="OnboardingRequest",
        ),
        migrations.AlterField(
            model_name="onboardingattachment",
            name="progress_update",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="onboarding.ticketupdate",
                verbose_name="Progress Update",
            ),
        ),
        migrations.DeleteModel(
            name="ProgressUpdate",
        ),
    ]
